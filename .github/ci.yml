name: Build Releases
on:
  push:
    tags:
      - v*
    branches: [ main ]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]    
    
    - name: Build Verison
      id: build_version
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: |
        echo "$GITHUB_CONTEXT"
    
    - name: Install dependencies
      run: |
        sudo apt-get install git-core gnupg flex bison build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 libncurses5 libncurses5-dev lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig dos2unix libssl-dev
        curl -l -O https://github.com/casey/just/releases/download/0.10.1/just-0.10.1-x86_64-unknown-linux-musl.tar.gz
        tar -xf just-0.10.1-x86_64-unknown-linux-musl.tar.gz -C /usr/local/bin

    - name: DTC Build      
      env:
        tag: ${{ github.ref }}
      run: |        
        cd buildtool && just c

    - name: Upload Github Assets
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ./dist/*release.zip
        prerelease: ${{ contains(github.ref, '-') }}
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    #   with:
    #     tag_name: ${{ github.ref }}
    #     release_name: Release ${{ github.ref }}
    #     body: |
    #       Changes in this Release
    #       - First Change
    #       - Second Change
    #     draft: false
    #     prerelease: false
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.TOKEN }}
    #   with:
    #     tag_name: ${{ github.ref }}
    #     release_name: Release ${{ github.ref }}
    #     draft: false
    #     prerelease: false
    # - name: Upload Release Asset
    #   id: upload-release-asset 
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #     asset_path: "./dist/UAutoIDE-1.0.12-internal-release.zip"
    #     asset_name: UAutoIDE.zip
    #     asset_content_type: application/zip

    # - name: Generate build number
    #   uses: einaregilsson/build-number@v3
    #   with:
    #     token: ${{secrets.TOKEN}}

    # - name: Upload binaries to release
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.TOKEN }}
    #     file: ".\\dist\\UAutoIDE-1.0.12-internal-release.zip"
    #     tag: ${{ github.ref }}